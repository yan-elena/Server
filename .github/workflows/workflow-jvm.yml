name: ci

on:
  push:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
      - name: Create mongo Docker container
        uses: ankane/setup-mongodb@v1
      - if: ${{ matrix.os != 'windows-latest'}}
        run: |
            mongosh --eval "`cat greenhouseService/src/main/resources/initDb.txt`"
      - if: ${{ matrix.os == 'windows-latest' }}
        run: |
            $content = cat greenhouseService/src/main/resources/initDb.txt
            mongo --eval "$content"
      - name: build
        run: ./gradlew build -x test -x aggregateJavadocJar
      - name: test
        run: ./gradlew test --parallel || ./gradlew test --parallel || ./gradlew test --parallel
  release:
    if: github.event_name == 'push'
    needs:
      - build
    runs-on: ubuntu-latest
    concurrency:
      group: release
      cancel-in-progress: false
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOYMENT_TOKEN }}
        run: |
          ./gradlew shadowJar 
          npm install
          npm ci
          npx semantic-release
  success:
    runs-on: ubuntu-latest
    needs:
      - build
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
